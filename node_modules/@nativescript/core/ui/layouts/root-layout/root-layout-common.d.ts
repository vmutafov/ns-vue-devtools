import { View } from '../../core/view';
import { GridLayout } from '../grid-layout';
import { RootLayout, RootLayoutOptions, ShadeCoverOptions, TransitionAnimation } from '.';
export declare class RootLayoutBase extends GridLayout {
    private shadeCover;
    private staticChildCount;
    private popupViews;
    constructor();
    open(view: View, options?: RootLayoutOptions): Promise<void>;
    close(view: View, exitTo?: TransitionAnimation): Promise<void>;
    closeAll(): Promise<void>;
    bringToFront(view: View, animated?: boolean): Promise<void>;
    getShadeCover(): View;
    private getPopupIndex;
    private getViewInitialState;
    private getViewExitState;
    private applyInitialState;
    private applyDefaultState;
    private getEnterAnimation;
    private getExitAnimation;
    private createShadeCover;
    private updateShadeCover;
    private hasChild;
    private closeShadeCover;
    protected _bringToFront(view: View): void;
    protected _initShadeCover(view: View, shadeOption: ShadeCoverOptions): void;
    protected _updateShadeCover(view: View, shadeOption: ShadeCoverOptions): Promise<void>;
    protected _closeShadeCover(view: View, shadeOptions: ShadeCoverOptions): Promise<void>;
}
export declare function getRootLayout(): RootLayout;
export declare const defaultTransitionAnimation: TransitionAnimation;
export declare const defaultShadeCoverTransitionAnimation: TransitionAnimation;
export declare const defaultShadeCoverOptions: ShadeCoverOptions;
